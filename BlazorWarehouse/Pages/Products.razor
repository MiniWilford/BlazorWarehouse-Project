@page "/Products"

@using WarehouseModels

@inject HttpClient http

<h3 style="font-weight:bold">Products</h3>
<p>
    <a href="ProductCreate">Create New</a>
</p>

@if (ProductList is null)
{
    <p>Loading Products</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <h5 style="font-weight:bold">Id</h5>
                </th>
                <th>
                    <h5 style="font-weight:bold">Name</h5>
                </th>
                <th>
                    <h5 style="font-weight:bold">Price</h5>
                </th>
                <th>
                    <h5 style="font-weight:bold">Actions</h5>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in ProductList)
            {
                <tr>
                    <td>
                        @product.ProductId
                    </td>
                    <td style="width:250px; white-space:nowrap">
                        @product.ProductName
                    </td>
                    <td style="text-align: right">
                        @product.ProductPrice.ToString("$##0.00")
                    </td>
                    <td>
                        <a href="@($"ProductEdit/{product.ProductId}")">Edit</a> |
                        <a href="@($"ProductDetails/{product.ProductId}")">Details</a> |
                        <a @onclick="@( () => DeleteProduct(product.ProductId))" @onclick:preventDefault="true" href="">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public List<ProductViewModel>? ProductList { get; set; }

    private async void DeleteProduct(int ProductId)
    {
        var result = await http.DeleteAsync($"api/products/{ProductId}");
        ProductList = await http.GetFromJsonAsync<List<ProductViewModel>>("api/Products");
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        ProductList = await http.GetFromJsonAsync<List<ProductViewModel>>($"/api/products/");
        await base.OnInitializedAsync();
    }
}