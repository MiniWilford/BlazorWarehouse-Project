@page "/Managers"
@using WarehouseModels

@inject HttpClient http

<h3>Managers</h3>

@if (ManagerList == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Title</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var manager in ManagerList)
            {
                <tr>
                    <td>@manager.FirstName</td>
                    <td>@manager.LastName</td>
                    <td>@manager.Title</td>
                    <td>
                        <a href="@($"ManagerEdit/{manager.ManagerId}")">Edit</a> |
                        <a href="@($"ManagerDetails/{manager.ManagerId}")">Details</a> |
                        <a @onclick="@( () => DeleteManager(manager.ManagerId))" @onclick:preventDefault="true" href="">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    public List<ManagerViewModel>? ManagerList { get; set; } = new List<ManagerViewModel>();

    private async void DeleteManager(int ManagerId)
    {
        var result = await http.DeleteAsync($"api/managers/{ManagerId}");
        ManagerList = await http.GetFromJsonAsync<List<ManagerViewModel>>("api/Managers");
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        ManagerList = await http.GetFromJsonAsync<List<ManagerViewModel>>("api/Managers");
    }
}

