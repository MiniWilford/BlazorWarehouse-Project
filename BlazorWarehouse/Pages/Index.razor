@page "/"
@page "/Index"

@inject HttpClient http

@if(Companies is null)
{
    <div class="spinner-border m-5" role="status">
    </div>
}
else
{
    <h1>Choose Company</h1>

    <form>
        <div class="form-group m-2 w-25">
            <label class="control-label">Company: </label>
            <select class="form-control" @bind="CompanyId">
                <option value="">Select a company...</option>
                @foreach (var company in Companies)
                {
                    <option value="@company.CompanyId">@company.CompanyName</option>
                }
            </select>
        </div>
        <div class="form-group m-2">
            <a class="btn btn-primary"
               href="/CompanyOrder/@CompanyId"
            @onclick="SetAllowNavigate"
            @onclick:preventDefault="AllowNavigate">Go!</a>

        </div>
    </form>
}


@code {
    public string? CompanyId { get; set; }
    
    public List<CompaniesViewModel>? Companies { get; set; }

    public bool AllowNavigate { get; set; } = false;

    private void SetAllowNavigate()
    {
        AllowNavigate = string.IsNullOrWhiteSpace(CompanyId); // True if not null/whitespace
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Companies = await http.GetFromJsonAsync<List<CompaniesViewModel>>("api/companies");
        } catch (Exception e)
        {
        }

        await base.OnInitializedAsync();
    }
}